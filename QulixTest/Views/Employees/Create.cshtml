@model BLL.DTO.CreateModels.EmployeeToCreate

@{
    ViewBag.Title = "Создание работника";
}

<section class="body-content">
    <div class="container">
        <div class="block-header">
            <h2>Создание работника</h2>
        </div>
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">

                    @using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                    <div class="card-body">

                        @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
                        {
                            <div class="form-group">
                                <div class="alert alert-danger">@Html.ValidationSummary(false, "Ошибки: ")</div>
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName)
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SecondName)
                            @Html.EditorFor(model => model.SecondName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ThirdName)
                            @Html.EditorFor(model => model.ThirdName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignedDate)
                            @Html.EditorFor(model => model.AssignedDate, new { htmlAttributes = new { @class = "form-control", id = "assignedDate" } })
                        </div>

                        <div class="form-group">
                            @Html.DropDownListFor(model => model.TypeId, (IEnumerable<SelectListItem>)ViewBag.EmployeesTypes, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            @Html.DropDownListFor(model => model.CompanyId, (IEnumerable<SelectListItem>)ViewBag.Companies, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary w-100">Создать</button>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary w-100" onclick="window.history.go(-1);return false;">Назад</button>
                        </div>

                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script>
        $('#assignedDate').datepicker({
            dateFormat: "yy-mm-dd",
            minDate: new Date("01.01.2001"),
            monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
        });
    </script>
}
